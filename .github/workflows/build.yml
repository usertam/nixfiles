name: "Build tests on platforms"

on:
  workflow_dispatch:
  push:
    branches:
    - master
  pull_request:

jobs:
  build-linux:
    name: Build Linux
    strategy:
      matrix:
        config: [ generic.installer, generic.docker ]
        system: [ x86_64-linux, aarch64-linux ]
        artifact: [ release ]
        include:
        - config: slate
          system: aarch64-linux
          artifact: release
        - config: tsrvbld
          system: x86_64-linux
          artifact: false
      fail-fast: false
    runs-on: ${{matrix.system == 'x86_64-linux' && 'ubuntu-24.04' || 'ubuntu-24.04-arm'}} 
    steps:
    - uses: actions/checkout@main
      with:
        ref: ${{github.ref}}
    - uses: DeterminateSystems/nix-installer-action@main
    - uses: DeterminateSystems/magic-nix-cache-action@main
    - uses: cachix/cachix-action@master
      with:
        name: usertam-nixfiles
        authToken: ${{secrets.CACHIX_AUTH_TOKEN}}
    - name: Build ${{matrix.system}}.${{matrix.config}}.toplevel
      run: |
        nix build -L --keep-going .#packages.${{matrix.system}}.nixosConfigurations.${{matrix.config}}.config.system.build.toplevel
    - name: Build ${{matrix.system}}.${{matrix.config}}.${{matrix.artifact}}
      if: matrix.artifact != false
      run: |
        nix build -L --keep-going .#packages.${{matrix.system}}.nixosConfigurations.${{matrix.config}}.config.system.build.${{matrix.artifact}}
        find -L result -name '*.zst' -exec cp -a {} . \;
        echo "artifact=$(ls *.zst | tee /dev/stderr)" >> "$GITHUB_ENV"
    - uses: actions/upload-artifact@main
      if: env.artifact != ''
      with:
        name: ${{env.artifact}}
        path: ${{env.artifact}}

  build-darwin:
    name: Build Darwin
    runs-on: macos-15
    steps:
    - uses: actions/checkout@main
      with:
        ref: ${{github.ref}}
    - uses: DeterminateSystems/nix-installer-action@main
      with:
        mac-case-sensitive: true
    - uses: DeterminateSystems/magic-nix-cache-action@main
    - uses: cachix/cachix-action@master
      with:
        name: usertam-nixfiles
        authToken: ${{secrets.CACHIX_AUTH_TOKEN}}
    - name: Switch to darwin-runner
      run: |
        nix build .#darwinConfigurations.runner.config.system.build.toplevel
        sudo rm -rf /etc/nix/nix.conf /etc/nix/nix.custom.conf
        result/activate-user && sudo result/activate
        # Wait for the SSH server to be ready.
        # kex_exchange_identification: read: Connection reset by peer
        until sudo ssh -o StrictHostKeyChecking=no builder@localhost -p 31022 -i /etc/nix/builder_ed25519 cat /proc/version; do sleep 10; done
    - name: Build gale.toplevel
      run: |
        nix build -L --keep-going .#darwinConfigurations.gale.config.system.build.toplevel

  build-status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: [build-linux, build-darwin]
    if: always()
    steps:
    - run: ${{!contains(needs.*.result, 'failure')}}
