name: "Publish release"
on:
  workflow_dispatch:
  push:
    tags:
    - '*'
  pull_request:
    types:
    - closed
permissions:
  contents: write
jobs:
  patch-release:
    name: Make patch release
    if: >-
      github.event_name == 'pull_request' &&
      github.event.pull_request.user.login == 'github-actions[bot]' &&
      github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
      with:
        fetch-tags: true
    - name: Bump the patch version
      run: |
        PREV_VERSION=$(git describe --tags --abbrev=0)
        if [[ $PREV_VERSION =~ v([0-9]+)\.([0-9]+)\.([0-9]+) ]]; then
          MAJOR=${BASH_REMATCH[1]}
          MINOR=${BASH_REMATCH[2]}
          PATCH=${BASH_REMATCH[3]}
          NEXT_VERSION="v$MAJOR.$MINOR.$((PATCH + 1))"
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
        else
          echo "Invalid version format: $PREV_VERSION" >&2
          exit 1
        fi
    - name: Locate the latest workflow run
      run: |
        echo -n "RUN_ID=" >> $GITHUB_ENV
        gh run list --json databaseId,headSha \
          --jq '.[] | select(.headSha == "${{github.sha}}") | .databaseId' | head -1 > $GITHUB_ENV
    - uses: actions/download-artifact@main
      with:
        run-id: ${{env.RUN_ID}}
        merge-multiple: true
    - uses: softprops/action-gh-release@v2.1.0
      with:
        tag_name: ${{env.NEXT_VERSION}}
        files: '*.xz'
  minor-release:
    name: Make minor release
    if: >-
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - name: Locate the latest workflow run
      run: |
        echo -n "RUN_ID=" >> $GITHUB_ENV
        gh run list --json databaseId,headSha \
          --jq '.[] | select(.headSha == "${{github.sha}}") | .databaseId' | head -1 > $GITHUB_ENV
    - uses: actions/download-artifact@main
      with:
        run-id: ${{env.RUN_ID}}
        merge-multiple: true
    - uses: softprops/action-gh-release@v2.1.0
      with:
        tag_name: ${{github.ref_name}}
        files: '*.xz'
